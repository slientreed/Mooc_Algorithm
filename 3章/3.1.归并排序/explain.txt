这几个小节讲了时间复杂度是nlog(n)的归并排序

归并排序的思路：
1.两个有序的子序列合并成一个有序序列，时间复杂度是O(n),空间复杂度是O(n),参考__merge()函数
2.一个n个元素的序列，可以分成log(n)层，每一层之间都是相邻两块的合并，每层的复杂度是O(n)
3.因此总的复杂度是nlog（n）；

归并排序有两种，一种是UB自顶向下，进行递归完成排序；还有一种是BU自底向上，进行迭代完成排序；
递归：在一个函数中，调用函数自身（注意找到函数递归出口）。从大到小，再回归大问题
迭代：为了解决一个大问题，找到同类问题的最小问题，且可以由小问题得到大一级的问题答案，不段类推，最终得出大问题答案。从小到大，递推解决最终大问题。
